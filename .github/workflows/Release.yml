name: Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Specify the release version'
        required: true

jobs:
  publish:
    runs-on: windows-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0'  # Change this to your desired .NET version

      - name: Build and Publish Projects
        run: |
          $projects = @("Mul-Ty-Player Client", "Mul-Ty-Player Server", "Mul-Ty-Player Updater")
          
          foreach ($project in $projects) {
          dotnet restore "$project/$project.csproj"
          dotnet build "$project/$project.csproj" --configuration Release
          dotnet publish "$project/$project.csproj" --configuration Release -o "publish/$project" -r win-x86 --self-contained true -p:PublishSingleFile=true
          }

      - name: Zip Published Projects
        run: |
          $projects = @("Mul-Ty-Player Client", "Mul-Ty-Player Server", "Mul-Ty-Player Updater")
          foreach ($project in $projects) {
            Compress-Archive -Path "publish/$project/*" -DestinationPath "publish/$project.zip"
          }

      - name: Create Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ github.event.inputs.release_version }}
          draft: false
          prerelease: false
          files: |
            "publish/Mul-Ty-Player Client.zip"
            "publish/Mul-Ty-Player Server.zip"
            "publish/Mul-Ty-Player Updater.zip"
            "Patch_PC.rkv"
          

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $projects = @("Mul-Ty-Player Client", "Mul-Ty-Player Server", "Mul-Ty-Player Updater")
          foreach ($project in $projects) {
            gh release upload ${{ github.event.inputs.release_version }} "publish/$project.zip" --clobber
          }
