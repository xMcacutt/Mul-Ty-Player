<UserControl x:Class="MulTyPlayerClient.GUI.Views.Lobby"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodels="clr-namespace:MulTyPlayerClient.GUI.ViewModels"
             xmlns:controls="clr-namespace:MulTyPlayerClient.GUI.Controls"
             xmlns:client="clr-namespace:MulTyPlayerClient"
             mc:Ignorable="d"
             Height="450" Width="800" FontSize="10" BorderBrush="Black"
             Background="{Binding MainBack, Source={x:Static client:App.AppColors}}"
             d:DataContext="{d:DesignInstance Type=viewmodels:LobbyViewModel}">

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.6*" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="3.2*" />
        </Grid.ColumnDefinitions>

        <!--Left side panel-->
        <Grid Margin="0, 0, 0, 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="4.6*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0"
                       Style="{StaticResource ComicTextMain}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontSize="28"
                       Text="Connected Koalas" />
            <DataGrid Name="PlayerInfo"
                      PreviewMouseRightButtonDown="PlayerListItem_OnMouseRightButtonDown"
                      ContextMenuOpening="DataGrid_OnContextMenuOpening"
                      Style="{StaticResource DataGridStyle}"
                      Grid.Row="1"
                      HorizontalContentAlignment="Stretch"
                      ItemsSource="{Binding PlayerInfoList}">
                <DataGrid.ContextMenu>
                    <ContextMenu x:Name="HostDataGridContextMenu">
                        <controls:CustomMenuItem IconCode="{DynamicResource IcoGift}" Header="Gift Host" Click="GiveHost_OnClick"/>
                        <controls:CustomMenuItem IconCode="{DynamicResource IcoKick}" Header="Kick" Click="KickPlayer_OnClick"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Client ID" Width="0.3*" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ComicText}"
                                           VerticalAlignment="Center"
                                           FontSize="14"
                                           IsHitTestVisible="False"
                                           Padding="3"
                                           Text="{Binding ClientId}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Koala Icon" Width="0.5*" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl
                                    Content="{Binding KoalaName, Converter={StaticResource KoalaNameToIconConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Player Name" Width="1.5*" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ComicText}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           FontSize="14"
                                           Padding="0"
                                           Margin="2 0 0 0"
                                           ToolTip="{Binding PlayerName}"
                                           Text="{Binding PlayerName}"
                                           TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Host Status" Width="0.35*" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <controls:Icon Size="10"
                                               Foreground="{Binding MainAccent, Source={x:Static client:App.AppColors}}"
                                               Margin="0"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Code="{Binding IsHost, Converter={StaticResource BooleanToHostIconConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Level" Width="0.6*" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ComicText}"
                                           VerticalAlignment="Center"
                                           FontSize="14"
                                           Padding="3"
                                           ToolTip="{Binding Level, Converter={StaticResource LevelNameConverter}}"
                                           Text="{Binding Level}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Ready Status" Width="0.35*" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <controls:Icon Size="10"
                                               Foreground="{Binding MainAccent, Source={x:Static client:App.AppColors}}"
                                               Margin="0"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Code="{Binding IsReady, Converter={StaticResource BooleanToReadyIconConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Role" Width="0.35*" CanUserResize="False" Visibility="{Binding IsHideSeekButtonEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <controls:Icon Size="10"
                                               Foreground="{Binding MainAccent, Source={x:Static client:App.AppColors}}"
                                               Margin="0"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Code="{Binding Role, Converter={StaticResource RoleToIconConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            
            <TextBlock Grid.Row="2"
                       x:Name="Timer"
                       Text="{Binding Time}"
                       Visibility="{Binding IsTimerVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"
                       FontFamily="Cascadia Code"
                       FontSize="53"
                       Margin="2"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Foreground="{Binding MainText, Source={x:Static client:App.AppColors}}"/>
        </Grid>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0">

                <Grid VerticalAlignment="Top" Height="55">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <Button x:Name="SettingsButton"
                                Margin="0 0 2 0"
                                Click="SettingsButton_Click"
                                Width="55"
                                ToolTip="Settings"
                                Style="{StaticResource LobbyButton}">
                            <controls:Icon Margin="5,0" Code="{DynamicResource IcoSettings}" Size="24" />
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Button.Resources>
                        </Button>
                        
                        <Button x:Name="ReadyButton"
                                Margin="2 0"
                                Click="ReadyButton_Click"
                                ToolTip="Ready"
                                Width="55"
                                IsEnabled="{Binding IsReadyButtonEnabled}"
                                Style="{StaticResource LobbyButton}">
                            <controls:Icon Margin="5,0" Code="{DynamicResource IcoReady}" Size="24" />
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Button.Resources>
                        </Button>

                        <Button x:Name="LaunchGameButton"
                                Margin="2 0"
                                Click="LaunchGameButton_Click"
                                ToolTip="Launch Game"
                                Width="55"
                                IsEnabled="{Binding IsLaunchGameButtonEnabled}"
                                Style="{StaticResource LobbyButton}">
                            <controls:Icon Margin="5,0" Code="{DynamicResource IcoGame}" Size="24" />
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Button.Resources>
                        </Button>

                        <Button x:Name="RequestSyncButton"
                                Margin="2 0"
                                Click="RequestSyncButton_Click"
                                ToolTip="Request Sync"
                                Width="55"
                                IsEnabled="{Binding IsSyncButtonEnabled}"
                                Style="{StaticResource LobbyButton}">
                            <controls:Icon Margin="5,0" Code="{DynamicResource IcoRefresh}" Size="24" />
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Button.Resources>
                        </Button>
                        
                        <Button x:Name="HostMenuButton"
                                Margin="2 0"
                                Click="HostMenuButton_Click"
                                ContextMenuOpening="HostMenuButton_OnContextMenuOpening"
                                ToolTip="Host Menu"
                                IsEnabled="{Binding IsHostMenuButtonEnabled}"
                                Width="55"
                                Style="{StaticResource LobbyButton}">
                            <controls:Icon Margin="5,0" Code="{DynamicResource IcoHost}" Size="24" />
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Button.Resources>
                            <Button.ContextMenu>
                                <ContextMenu>
                                    <controls:CustomMenuItem Header="Level Lock Mode"
                                                             x:Name="LevelLockToggle"
                                                             Click="LevelLockToggle_Click"
                                                             IsCheckable="true"
                                                             IsChecked="{Binding IsLevelLockEnabled}"/>
                                    <controls:CustomMenuItem Header="Reset Sync"
                                                             Click="ResetSync_Click"
                                                             IconCode="{DynamicResource IcoUndo}"/>
                                    <controls:CustomMenuItem Header="Password"
                                                             IconCode="{DynamicResource IcoPassword}">
                                        <controls:CustomMenuItem Header="Clear Password"
                                                                 Click="ClearPassword_Click"
                                                                 IconCode="{DynamicResource IcoErase}"/>
                                    </controls:CustomMenuItem>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        
                         <Button x:Name="VoiceMenuButton"
                                Margin="2 0"
                                Click="VoiceMenuButton_Click"
                                ToolTip="Voice Menu"
                                Width="55"
                                Style="{StaticResource LobbyButton}">
                            <controls:Icon Margin="5,0" Code="{DynamicResource IcoSound}" Size="24" />
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Button.Resources>
                            <Button.ContextMenu>
                                <ContextMenu>
                                    <controls:CustomMenuItem Header="MTP Audio"
                                                             x:Name="MTPAudioToggle"
                                                             Click="MTPAudioToggle_Click"
                                                             IconCode="{DynamicResource IcoMic}"
                                                             IsChecked="False"/>
                                    <controls:CustomMenuItem Header="Use Proximity"
                                                             x:Name="ProximityToggle"
                                                             IsCheckable="True"
                                                             Click="Proximity_Click"
                                                             IconCode="{DynamicResource IcoProximity}"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        
                        <Button x:Name="HideSeekMenuButton"
                                Margin="2 0"
                                Click="HideSeekMenuButton_Click"
                                IsEnabled="{Binding IsHideSeekButtonEnabled}"
                                ToolTip="Hide &amp; Seek Menu"
                                Width="55"
                                Style="{StaticResource LobbyButton}">
                            <controls:Icon Margin="5,0" Code="{Binding Role, Converter={StaticResource RoleToIconConverter}}" Size="24" />
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Button.Resources>
                            <Button.ContextMenu>
                                <ContextMenu>
                                    <controls:CustomMenuItem Header="Change Role"
                                                             x:Name="RoleToggle"
                                                             Click="ChangeRoleToggle_Click"
                                                             IconCode="{Binding Role, Converter={StaticResource RoleToIconConverter}}"/>
                                    <controls:CustomMenuItem Header="Show / Hide Timer"
                                                             x:Name="TimerToggle"
                                                             IsCheckable="True"
                                                             Click="TimerToggle_Click"
                                                             IconCode="{DynamicResource IcoStopwatch}"/>
                                    <controls:CustomMenuItem Header="Reset Time"
                                                             x:Name="ResetTimer"
                                                             Click="ResetTimer_OnClick"
                                                             IconCode="{DynamicResource IcoResetTimer}"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                    </StackPanel>

                    <Button Grid.Column="1" x:Name="DisconnectButton"
                            Margin="0"
                            HorizontalAlignment="Center"
                            ToolTip="Disconnect"
                            Width="55"
                            Style="{StaticResource LobbyButton}"
                            Command="{Binding LogoutCommand}">
                        <controls:Icon Margin="5,0" Code="{DynamicResource IcoExit}" Size="24" />
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5" />
                            </Style>
                        </Button.Resources>
                    </Button>
                </Grid>
                <Separator Width="500" Foreground="{Binding SpecialBack, Source={x:Static client:App.AppColors}}" />
            </StackPanel>


            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled"
                          RenderTransformOrigin="0.5,0.5"
                          Margin="0 5 0 0"
                          Background="{StaticResource BackGradient}"
                          PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                <ScrollViewer.RenderTransform>
                    <ScaleTransform ScaleY="-1" />
                </ScrollViewer.RenderTransform>
                <ItemsControl ItemsSource="{Binding ChatMessages}"
                              Margin="5"
                              RenderTransformOrigin="0.5,0.5">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0  2 5 2">
                                <TextBox Text="{Binding Mode=OneWay}"
                                         IsReadOnly="True"
                                         TextWrapping="Wrap"
                                         Foreground="{Binding MainText, Source={x:Static client:App.AppColors}}"
                                         Background="Transparent"
                                         SelectionBrush="{Binding MainAccent, Source={x:Static client:App.AppColors}}"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         FontFamily="Cascadia Code"
                                         FontSize="12"
                                         HorizontalAlignment="Stretch"
                                         TextAlignment="Left" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="-1" />
                            <SkewTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </ItemsControl.RenderTransform>
                </ItemsControl>
            </ScrollViewer>

            <Grid Grid.Row="2" Margin="0,5,0,0" Height="30">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.9*" />
                    <ColumnDefinition Width="0.1*" />
                </Grid.ColumnDefinitions>
                <!--Tag only works as a placeholder text because of a custom style-->
                <TextBox Grid.Column="0"
                         x:Name="TextBoxInput"
                         Padding="4, 0"
                         FontFamily="Cascadia Code"
                         FontSize="14"
                         Cursor="IBeam"
                         PreviewKeyDown="TextboxInput_KeyDown"
                         Text="{Binding Input, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Tag=" Type /help or /help &lt;command> for commands"
                         Style="{StaticResource PlaceholderTextStyle}" />

                <Button Grid.Column="1"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Margin="0"
                        Command="{Binding ManageInputCommand}"
                        Style="{StaticResource LobbyButton}"
                        Width="50">
                    <controls:Icon Margin="5,0" Code="{DynamicResource IcoSend}" Size="14" />
                </Button>
            </Grid>
        </Grid>
    </Grid>

</UserControl>