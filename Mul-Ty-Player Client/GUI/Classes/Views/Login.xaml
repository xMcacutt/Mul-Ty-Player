<UserControl x:Class="MulTyPlayerClient.GUI.Views.Login"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodels="clr-namespace:MulTyPlayerClient.GUI.ViewModels"
             mc:Ignorable="d"
             Height="450"
             Width="800"
             d:DataContext="{d:DesignInstance Type=viewmodels:LoginViewModel, IsDesignTimeCreatable=True}">

    <Grid>
        <Canvas>
            <TextBlock x:Name="PulsatingText"
                       Text="Update Available!"
                       FontSize="20"
                       Visibility="{Binding UpdateMessageVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"
                       Foreground="White"
                       Canvas.Left="90"
                       Canvas.Top="40"
                       RenderTransformOrigin="0.5,0.5">
                <TextBlock.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource ComicText}">
                        <Style.Resources>
                            <Storyboard x:Key="PulseAnimation" RepeatBehavior="Forever">
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                 From="1" To="1.1" AutoReverse="True" Duration="0:0:1"/>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                                 From="1" To="1.2" AutoReverse="True" Duration="0:0:1"/>
                            </Storyboard>
                        </Style.Resources>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard Storyboard="{StaticResource PulseAnimation}" />
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Resources>
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-12.5"/>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Canvas>
        <StackPanel Margin="10">

            <TextBlock x:Name="TextTitle"
                       Text="Connect To Server"
                       VerticalAlignment="Bottom"
                       Margin="0, 40, 0, 0"
                       Style="{StaticResource ComicText}"
                       Foreground="White"
                       FontSize="55">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="0"
                                      Direction="315"
                                      ShadowDepth="2" />
                </TextBlock.Effect>
            </TextBlock>

            <StackPanel HorizontalAlignment="Center"
                        Margin="0, 10 0 3"
                        Orientation="Horizontal">
                <TextBlock x:Name="LabelHostIp"
                           Text="Host IP"
                           Style="{StaticResource ComicText}"
                           Foreground="White"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontSize="25"
                           Width="90">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="0" Direction="315" ShadowDepth="2" />
                    </TextBlock.Effect>
                </TextBlock>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="FieldHostIp"
                             Grid.Column="0"
                             HorizontalContentAlignment="Left"
                             Text="{Binding ConnectingAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             FontSize="25"
                             Height="40"
                             Width="390"
                             TextChanged="FieldHostIp_OnTextChanged"
                             Padding="5 0 0 0"
                             HorizontalAlignment="Stretch"
                             VerticalContentAlignment="Center"
                             BorderThickness="2"
                             BorderBrush="{x:Null}">
                        <TextBox.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#7F6D4500" />
                                <GradientStop Color="#7F000000" Offset="1" />
                            </LinearGradientBrush>
                        </TextBox.Background>
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource TyTextBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HideAddress}" Value="True">
                                        <Setter Property="Foreground" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <ToggleButton x:Name="ToggleButton"
                                  Grid.Column="1" 
                                  Template="{StaticResource TyComboBoxToggleButtonTemplate}"
                                  IsChecked="{Binding IsPopupOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    
                    <Popup StaysOpen="False"
                           x:Name="ServerListPopup"
                           Placement="Bottom"
                           PlacementTarget="{Binding ElementName=ToggleButton}"
                           Grid.Column="1"
                           HorizontalAlignment="Right"
                           Opened="Popup_Opened"
                           IsOpen="{Binding IsPopupOpen, Mode=TwoWay}">
                        <ListView SelectionChanged="ServerListView_SelectionChanged" 
                                  x:Name="ServerListView"
                                  ItemsSource="{Binding Servers}" 
                                  DisplayMemberPath="IP"
                                  Style="{StaticResource TyListBox}">
                            <ListView.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#7F6D4500" />
                                    <GradientStop Color="#7F000000" Offset="1" />
                                </LinearGradientBrush>
                            </ListView.Background>
                        </ListView>
                    </Popup>
                    <Border
                        Padding="5 0 0 0"
                        Margin="0, 0, 0,0"
                        MaxWidth="380"
                        Height="30">
                        <TextBlock Grid.Column="0"
                                   Text="{Binding ConnectingAddress, Mode=TwoWay, 
                                        Converter={StaticResource BoolTextCensorConverter}}"
                                   Style="{StaticResource RubikBlock}"
                                   IsHitTestVisible="False"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   MaxWidth="390"
                                   TextWrapping="NoWrap"
                                   FontSize="25"
                                   Height="30"
                                   Visibility="{Binding HideAddress, 
                                        Converter={StaticResource BooleanToVisibilityConverter},
                                        ConverterParameter=True}" />
                    </Border>
                </Grid>

                <CheckBox HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Background="{x:Null}"
                          BorderBrush="{x:Null}"
                          Width="40"
                          Opacity="0.4"
                          Margin="10, 0, 0, 0"
                          Style="{StaticResource VisibilityCheckBox}"
                          IsChecked="{Binding HideAddress}" />
            </StackPanel>
            
            <StackPanel Orientation="Horizontal"
                        Margin="130 0 0 0"
                        HorizontalAlignment="Center">
                <Button Style="{StaticResource SelectButton}"
                        Content="Request Client Count"
                        FontSize="14"
                        Height="30"
                        Width="175"
                        Margin="0"
                        Click="RequestClientCount_Click"/>
                <TextBlock Width="200"
                           FontSize="15"
                           VerticalAlignment="Center"
                           Margin="10 0 0 0"
                           Style="{StaticResource ComicText}"
                           Foreground="White"
                           Text="{Binding CurrentServerClientCount}">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="0" Direction="315" ShadowDepth="2" />
                    </TextBlock.Effect>
                </TextBlock>
            </StackPanel>
            

            <StackPanel HorizontalAlignment="Center"
                        Margin="0, 10"
                        Orientation="Horizontal">
                <TextBlock x:Name="LabelPass"
                           Text="Pass"
                           Style="{StaticResource ComicText}"
                           Foreground="White"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontSize="25"
                           Width="90">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="0" Direction="315" ShadowDepth="2" />
                    </TextBlock.Effect>
                </TextBlock>

                <Grid>
                    <TextBox x:Name="FieldPass"
                             HorizontalContentAlignment="Left"
                             Text="{Binding Pass, UpdateSourceTrigger=PropertyChanged}"
                             FontSize="25"
                             Height="40"
                             Width="420"
                             Padding="5 0 0 0"
                             HorizontalAlignment="Stretch"
                             VerticalContentAlignment="Center"
                             BorderThickness="2"
                             BorderBrush="{x:Null}">
                        <TextBox.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#7F6D4500" />
                                <GradientStop Color="#7F000000" Offset="1" />
                            </LinearGradientBrush>
                        </TextBox.Background>
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource TyTextBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HidePass}" Value="True">
                                        <Setter Property="Foreground" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock
                        Text="{Binding Pass, 
                                      Mode=OneWay, 
                                      Converter={StaticResource BoolTextCensorConverter}}"
                        Style="{StaticResource RubikBlock}"
                        IsHitTestVisible="False"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Padding="8 0 0 0"
                        Margin="0, 0, 0,0"
                        FontSize="25"
                        Height="30"
                        Visibility="{Binding HidePass, 
                                            Converter={StaticResource BooleanToVisibilityConverter},
                                            ConverterParameter=True}" />
                </Grid>

                <CheckBox HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Background="{x:Null}"
                          BorderBrush="{x:Null}"
                          Width="40"
                          Opacity="0.4"
                          Margin="10, 0, 0, 0"
                          Style="{StaticResource VisibilityCheckBox}"
                          IsChecked="{Binding HidePass}" />
            </StackPanel>


            <StackPanel HorizontalAlignment="Center"
                        Margin="0, 10"
                        Orientation="Horizontal">
                <TextBlock x:Name="LabelName"
                           Text="Name"
                           Style="{StaticResource ComicText}"
                           Foreground="White"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontSize="25"
                           Width="90">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="0" Direction="315" ShadowDepth="2" />
                    </TextBlock.Effect>
                </TextBlock>

                <Grid>
                    <TextBox x:Name="FieldName"
                             HorizontalContentAlignment="Left"
                             Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                             FontSize="25"
                             Height="40"
                             Width="420"
                             HorizontalAlignment="Stretch"
                             VerticalContentAlignment="Center"
                             BorderThickness="2"
                             Padding="5 0 0 0"
                             BorderBrush="{x:Null}">
                        <TextBox.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#7F6D4500" />
                                <GradientStop Color="#7F000000" Offset="1" />
                            </LinearGradientBrush>
                        </TextBox.Background>
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource TyTextBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HideName}" Value="True">
                                        <Setter Property="Foreground" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBlock
                        Text="{Binding Name, 
                                      Mode=OneWay, 
                                      Converter={StaticResource BoolTextCensorConverter}}"
                        Style="{StaticResource RubikBlock}"
                        IsHitTestVisible="False"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Padding="8 0 0 0"
                        Margin="0, 0, 0,0"
                        FontSize="25"
                        Height="30"
                        Visibility="{Binding HideName, 
                                            Converter={StaticResource BooleanToVisibilityConverter},
                                            ConverterParameter=True}" />
                </Grid>

                <CheckBox HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Background="{x:Null}"
                          BorderBrush="{x:Null}"
                          Width="40"
                          Opacity="0.4"
                          Margin="10, 0, 0, 0"
                          Style="{StaticResource VisibilityCheckBox}"
                          IsChecked="{Binding HideName}" />
            </StackPanel>
            
            <CheckBox x:Name="SpectatorCheckBox"
                      Style="{StaticResource ComicTextCheck}"
                      HorizontalAlignment="Center"
                      Content="Join As Spectator?"
                      Click="SpectatorCheckBox_OnClick"
                      IsChecked="{Binding JoinAsSpectator, Mode=TwoWay}"/>

            <Button x:Name="ButtonConnect"
                    HorizontalAlignment="Center"
                    Width="175"
                    Height="45"
                    Margin="0 0 0 15"
                    Content="Connect"
                    Style="{StaticResource SelectButton}"
                    Command="{Binding ConnectCommand}"
                    IsEnabled="{Binding ConnectButtonEnabled}" />
        </StackPanel>
    </Grid>

    <UserControl.Background>
        <ImageBrush x:Name="BgImage" ImageSource="pack://siteoforigin:,,,/GUI/KoalaSelectionAssets/Background.jpg" />
    </UserControl.Background>
</UserControl>