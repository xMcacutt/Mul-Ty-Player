<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MulTyPlayerClient.GUI.Controls"
                    xmlns:mulTyPlayerClient="clr-namespace:MulTyPlayerClient"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">
    
    <LinearGradientBrush x:Key="ControlBackgroundGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#7F6D4500" />
        <GradientStop Color="#7F000000" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#BF4D1500" />
        <GradientStop Color="#BF000000" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonHoverGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#BF000000" />
        <GradientStop Color="#BF4D1500" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonDisabledGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#44000000" />
        <GradientStop Color="#444D1500" Offset="1" />
    </LinearGradientBrush>
    
    <!-- MONOSPACED FONT BLOCK -->
    <Style TargetType="TextBlock" x:Key="RubikBlock">
        <Setter Property="TextElement.FontFamily" Value="Cascadia Code" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    
    <Style x:Key="TyListBox"
           TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="TextElement.FontSize" Value="20"/>
        <Setter Property="TextElement.FontFamily" Value="Cascadia Code" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="border"
                                        Padding="5"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{Binding AltAccent, Source={x:Static mulTyPlayerClient:App.AppColors}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TY STYLE TEXT BOX -->
    <Style x:Key="TyTextBox"
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextElement.FontFamily" Value="Cascadia Code" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="White" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#DDDDDD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!-- TY STYLE COMBO BOX-->
    <ControlTemplate TargetType="ToggleButton" x:Key="TyComboBoxToggleButtonTemplate">
        <Grid>
            <Border Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
                    CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0"
                    Background="{StaticResource ButtonGradient}"/>
            <Path Name="Arrow"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  Fill="White"
                  HorizontalAlignment="Center" 
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" 
                        Value="{StaticResource ButtonHoverGradient}" />
                <Setter Property="Fill" TargetName="Arrow" 
                        Value="#FFFFFF0F" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ComboBox" x:Key="TyComboBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Height="40">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" 
                                 Name="PART_SelectedItem"
                                 Text="{TemplateBinding Text}"
                                 Foreground="{TemplateBinding Foreground}"
                                 HorizontalAlignment="Stretch"
                                 Padding="5 0 0 0"
                                 VerticalContentAlignment="Center"
                                 BorderBrush="Transparent"
                                 BorderThickness="2"
                                 VerticalAlignment="Stretch"
                                 Background="{StaticResource ControlBackgroundGradient}"
                                 Style="{StaticResource TyTextBox}"/>
                        <ToggleButton Grid.Column="1" 
                                      Name="ToggleButton"
                                      ClickMode="Press" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource TyComboBoxToggleButtonTemplate}" />
                        <!-- Popup showing items -->
                        <Popup Grid.Column="0" Name="Popup" Placement="Bottom"
                               Focusable="False"
                               Width="200"
                               HorizontalOffset="150"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                </Grid.ColumnDefinitions>
                                <Border Name="DropDownBorder" 
                                        Background="{TemplateBinding Background}"
                                        Margin="0, 1, 0, 0"
                                        CornerRadius="0" 
                                        BorderThickness="0"/>
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border x:Name="Bd" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="true">
                                    <TextBlock  Text="{Binding}"
                                                Foreground="White"
                                                Style="{StaticResource ComicText}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                        <Setter TargetName="Bd" 
                                                Property="Background" 
                                                Value="{Binding AltAccent, Source={x:Static mulTyPlayerClient:App.AppColors}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--CHECKBOX-->
    <Style TargetType="{x:Type CheckBox}" x:Key="ComicTextCheck">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontFamily" Value="../Fonts/#SF Slapstick Comic" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                                   Text="{TemplateBinding Content}"
                                   Style="{StaticResource ComicText}"
                                   Margin="5,0,0,3">
                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="0" Direction="315" ShadowDepth="2" />
                            </TextBlock.Effect>
                        </TextBlock>

                        <Grid Grid.Column="1">
                            <Border Width="20"
                                    Height="20"
                                    Margin="10 0 10 0"
                                    CornerRadius="3"
                                    Background="Transparent"
                                    BorderBrush="{Binding MainText, Source={x:Static mulTyPlayerClient:App.AppColors}}"
                                    BorderThickness="2">
                            </Border>
                            <controls:Icon Code="{DynamicResource IcoCheck}"
                                           Foreground="White"
                                           Size="25"
                                           Visibility="{TemplateBinding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Buttons-->
    <Style TargetType="{x:Type Button}" x:Key="SelectButton">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource ButtonGradient}" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontFamily" Value="../Fonts/#SF Slapstick Comic" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <TextBlock x:Name="selectButtonText"
                                   Text="{TemplateBinding Content}"
                                   Margin="10,0"
                                   FontSize="{TemplateBinding FontSize}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverGradient}" />
                            <Setter Property="Foreground" TargetName="selectButtonText" Value="#FFFFFF0F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ButtonDisabledGradient}" />
                            <Setter Property="Foreground" TargetName="selectButtonText" Value="#44FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CheckBox-->
    <Style x:Key="VisibilityCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <controls:Icon x:Name="iconVisibHostIP"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Code="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityIconConverter}}"
                                           Size="30" />
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Margin" TargetName="iconVisibHostIP" Value="-2,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>