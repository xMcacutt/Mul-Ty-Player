<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MulTyPlayerClient.GUI.Controls">

    <!-- MONOSPACED FONT BLOCK -->
    <Style TargetType="TextBlock" x:Key="RubikBlock">
        <Setter Property="TextElement.FontFamily" Value="Cascadia Code" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <!-- TY STYLE TEXT BOX -->
    <Style x:Key="TyTextBox"
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextElement.FontFamily" Value="Cascadia Code" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="White" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#DDDDDD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComicTextCheck" TargetType="CheckBox">
        <Setter Property="FontFamily" Value="../Fonts/#SF Slapstick Comic" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <!--Buttons-->
    <LinearGradientBrush x:Key="ButtonGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#BF4D1500" />
        <GradientStop Color="#BF000000" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonHoverGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#BF000000" />
        <GradientStop Color="#BF4D1500" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonDisabledGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#44000000" />
        <GradientStop Color="#444D1500" Offset="1" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type Button}" x:Key="SelectButton">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource ButtonGradient}" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontFamily" Value="../Fonts/#SF Slapstick Comic" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <TextBlock x:Name="selectButtonText"
                                   Text="{TemplateBinding Content}"
                                   Margin="10,0"
                                   FontSize="{TemplateBinding FontSize}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverGradient}" />
                            <Setter Property="Foreground" TargetName="selectButtonText" Value="#FFFFFF0F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ButtonDisabledGradient}" />
                            <Setter Property="Foreground" TargetName="selectButtonText" Value="#44FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CheckBox-->
    <Style x:Key="VisibilityCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <controls:Icon x:Name="iconVisibHostIP"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Code="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityIconConverter}}"
                                           Size="30" />
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Margin" TargetName="iconVisibHostIP" Value="-2,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>