<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
                    xmlns:updater="clr-namespace:Mul_Ty_Player_Updater">

    <Style TargetType="Separator" x:Key="SettingsSepStyle">
        <Setter Property="Background" Value="{Binding AltBack, Source={x:Static updater:App.AppColors}}"/>
    </Style>
    
    <Style TargetType="TextBlock" x:Key="SettingsTextStyle">
         <Setter Property="TextElement.FontFamily" Value="../Fonts/#SF Slapstick Comic"/> 
        <!-- <Setter Property="TextElement.FontFamily" Value="Cascadia Code"></Setter> -->
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding MainText, Source={x:Static updater:App.AppColors}}" />
    </Style>
    
    
    <Style TargetType="Button" x:Key="SettingsButtonStyle">
        <Setter Property="Background" Value="{Binding MainBack, Source={x:Static updater:App.AppColors}}"/>
        <Setter Property="Foreground" Value="{Binding MainText, Source={x:Static updater:App.AppColors}}"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            TextElement.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="CheckBox" x:Key="SettingsCheckBoxStyle">
        <Setter Property="Foreground" Value="{Binding MainAccent, Source={x:Static updater:App.AppColors}}"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="1"
                                   Text="{TemplateBinding Content}"
                                   Style="{StaticResource SettingsTextStyle}"
                                   Margin="5,0,0,3"/>

                        <Border Grid.Column="0"
                                Width="20"
                                Height="20"
                                Margin="0 0 5 0"
                                CornerRadius="3"
                                Background="Transparent"
                                BorderBrush="{Binding MainText, Source={x:Static updater:App.AppColors}}"
                                BorderThickness="2">
                            <Rectangle Fill="{TemplateBinding Foreground}"
                                       Width="10"
                                       Height="10"
                                       Visibility="{Binding IsChecked, 
                                                    RelativeSource={RelativeSource TemplatedParent}, 
                                                    Converter={StaticResource BooleanToVisibilityConverter}, 
                                                    ConverterParameter={x:Static sys:Boolean.TrueString}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Foreground" Value="{Binding MainAccent, Source={x:Static updater:App.AppColors}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Background="{TemplateBinding Foreground}" 
                                CornerRadius="5 5 15 15"
                                Width="25"
                                ClipToBounds="True">
                        </Border>
                        <TextBlock Text="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type Slider}}}"
                                   VerticalAlignment="Center"
                                   FontSize="22"
                                   Margin="0 0 0 10"
                                   Foreground="White"
                                   Style="{StaticResource ComicText}">
                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="0" Direction="315" ShadowDepth="3" />
                            </TextBlock.Effect>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Foreground" Value="{Binding AltAccent, Source={x:Static updater:App.AppColors}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Slider" x:Key="SettingsSliderStyle">
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Margin" Value="0 0 0 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border x:Name="TrackBackground"
                                Margin="0"
                                CornerRadius="5"
                                Height="12"
                                Grid.Row="1"
                                BorderThickness="0"
                                Background="{Binding AltBack, Source={x:Static updater:App.AppColors}}">
                        </Border>
                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource SliderThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                        <TickBar x:Name="BottomTick" SnapsToDevicePixels="True"
                                 Grid.Row="2"
                                 Fill="{Binding MainText, Source={x:Static updater:App.AppColors}}"
                                 Placement="Bottom"
                                 Height="7"
                                 Visibility="Visible" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
                    CornerRadius="0" BorderThickness="0"
                    Background="{Binding AltBack, Source={x:Static updater:App.AppColors}}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
                    CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0"
                    Background="{Binding SpecialBack, Source={x:Static updater:App.AppColors}}"/>
            <Path Name="Arrow" Grid.Column="1"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  Fill="{Binding MainBack, Source={x:Static updater:App.AppColors}}"
                  HorizontalAlignment="Center" 
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" 
                        Value="{Binding AltBack, Source={x:Static updater:App.AppColors}}" />
                <Setter Property="Fill" TargetName="Arrow" 
                        Value="{Binding MainAccent, Source={x:Static updater:App.AppColors}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ComboBox" x:Key="SettingsComboBoxStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0 0 0 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Height="30">
                        <ToggleButton Name="ToggleButton"
                                      ClickMode="Press" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" />
                        <TextBlock Name="PART_SelectedItem" Margin="5, 3, 23, 3"
                                   HorizontalAlignment="Left" VerticalAlignment="Center"
                                   Text="{TemplateBinding ComboBox.SelectionBoxItem}"
                                   Style="{StaticResource SettingsTextStyle}"
                                   TextAlignment="Left"/>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                               Focusable="False"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" 
                                        Background="{Binding MainBack, Source={x:Static updater:App.AppColors}}"
                                        Margin="0, 1, 0, 0"
                                        CornerRadius="0" 
                                        BorderThickness="0"/>
                                <ScrollViewer Margin="4">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border x:Name="Bd" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <TextBlock Text="{TemplateBinding Content}" 
                                               Style="{StaticResource SettingsTextStyle}"
                                    />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                        <Setter TargetName="Bd" 
                                                Property="Background" 
                                                Value="{Binding AltAccent, Source={x:Static updater:App.AppColors}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="TextBox" x:Key="SettingsTextBoxStyle">
        <Setter Property="Foreground" Value="{Binding MainText, Source={x:Static updater:App.AppColors}}"/>
        <Setter Property="Background" Value="{Binding AltBack, Source={x:Static updater:App.AppColors}}"/>
        <Setter Property="Margin" Value="0 0 0 10"/>
        <Setter Property="FontFamily" Value="../Fonts/#SF Slapstick Comic"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5 5 0 0"/>
    </Style>

    
    <Style TargetType="Label" x:Key="SettingsLabelStyle">
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{TemplateBinding Content}" 
                               Style="{StaticResource SettingsTextStyle}" 
                               FontSize="14"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{Binding MainAccent, Source={x:Static updater:App.AppColors}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{Binding SpecialBack, Source={x:Static updater:App.AppColors}}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation"
                                                                      Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" CornerRadius="5" />
                        <Rectangle x:Name="PART_Track" />
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="5"
                                       RadiusY="5" />
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}"
                                       RenderTransformOrigin="0.5,0.5" RadiusX="5" RadiusY="5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>