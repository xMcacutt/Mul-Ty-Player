<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:gui="clr-namespace:MulTyPlayerClient.GUI"
                    xmlns:client="clr-namespace:MulTyPlayerClient">
    <LinearGradientBrush x:Key="BackGradient" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{Binding AltBackColor, Source={x:Static client:App.AppColors}}" />
        <GradientStop Color="{Binding MainBackColor, Source={x:Static client:App.AppColors}}" Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="ScrollBarThumb" TargetType="Thumb">
        <Setter Property="Background" Value="{Binding MainBack, Source={x:Static client:App.AppColors}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2.5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="{Binding SpecialBack, Source={x:Static client:App.AppColors}}" />
        <Setter Property="Foreground" Value="{Binding MainBack, Source={x:Static client:App.AppColors}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Width="10" Grid.Row="1" CornerRadius="5" BorderThickness="0"
                                Background="{Binding SpecialBack, Source={x:Static client:App.AppColors}}">
                            <Track x:Name="PART_Track" IsDirectionReversed="True">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGrid-->
    <Style TargetType="DataGrid" x:Key="DataGridStyle">
        <Setter Property="HeadersVisibility" Value="None" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding MainText, Source={x:Static client:App.AppColors}}" />
        <Setter Property="AlternatingRowBackground" Value="Transparent" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
    </Style>
    <Style TargetType="DataGridRow">
        <Setter Property="Height" Value="35" />
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="{Binding AltBack, Source={x:Static client:App.AppColors}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{Binding AltAccent, Source={x:Static client:App.AppColors}}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{Binding MainText, Source={x:Static client:App.AppColors}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--LobbyButton-->
    <Style TargetType="Button" x:Key="LobbyButton">
        <Setter Property="Background" Value="{Binding MainBack, Source={x:Static client:App.AppColors}}" />
        <Setter Property="Foreground" Value="{Binding MainAccent, Source={x:Static client:App.AppColors}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="5,5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="7, 0" />
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border"
                            CornerRadius="0"
                            BorderThickness="0"
                            Background="{Binding MainBack, Source={x:Static client:App.AppColors}}">
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsDefaulted" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border"
                                    Property="Background" Value="{Binding AltBack, Source={x:Static client:App.AppColors}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border"
                                    Property="Background" Value="{Binding SpecialBack, Source={x:Static client:App.AppColors}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border"
                                    Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding SpecialBack, Source={x:Static client:App.AppColors}}" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{Binding AltAccent, Source={x:Static client:App.AppColors}}" />
                <Setter Property="Background" Value="{Binding AltAccent, Source={x:Static client:App.AppColors}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TextBox-->
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
    <Style TargetType="{x:Type TextBox}" x:Key="PlaceholderTextStyle">
        <Setter Property="Background" Value="{Binding AltBack, Source={x:Static client:App.AppColors}}" />
        <Setter Property="Foreground" Value="{Binding MainText, Source={x:Static client:App.AppColors}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Padding="2 0"
                                   Margin="{TemplateBinding Margin}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Foreground="{Binding AltText, Source={x:Static client:App.AppColors}}"
                                   FontSize="{TemplateBinding FontSize}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                            Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding MainAccent, Source={x:Static client:App.AppColors}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{Binding MainAccent, Source={x:Static client:App.AppColors}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComicTextMain" TargetType="TextBlock">
        <Setter Property="TextElement.FontFamily" Value="../Fonts/#SF Slapstick Comic" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{Binding MainText, Source={x:Static client:App.AppColors}}" />
    </Style>
    <Style x:Key="ComicTextInverted" TargetType="TextBlock">
        <Setter Property="TextElement.FontFamily" Value="../Fonts/#SF Slapstick Comic" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{Binding InvertedText, Source={x:Static client:App.AppColors}}" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="InstallButton">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <TextBlock x:Name="installButtonText"
                                   Text="{TemplateBinding Tag}"
                                   Margin="10,0,10,0"
                                   FontSize="{TemplateBinding FontSize}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="installButtonText" Value="#FFFFFF0F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" TargetName="installButtonText" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>